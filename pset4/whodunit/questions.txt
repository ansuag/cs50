1.  stdint.h is a header file that declares specified integer types as having a certain width.
2.  It makes clear that you intend to use the data a specific way. Using well-
        defined types makes the code far easier and safer to port since you 
        won't get any surprises when one machine interprets int as 16-bit and 
        another as 32-bit.
3.   1 byte in a BYTE
        4 bytes in a DWORD (32 bits)
        4 bytes in a LONG (32 bits)
        2 bytes in a WORD (16 bits)
4.  The first two bytes of a BMP is a WORD and denotes bfType, which specifies the file type. It must be
   set to the signature word BM (0x4D42) to indicate bitmap.
5.  bfSize is the size, in bytes, of the bitmap file (includes the header files)
	biSize is the number of bytes required by the BITMAPINFOHEADER structure.
6.  If biHeight is negative, the bitmap is a top-down DIB (device-independent bitmap)
    and its origin is the upper left corner.
7.  biBitCount
8.  fopen might return NULL if the file doesn't exist or the file exist but we don't have permissions to access it
9.  because our program is reading 1 struct (1 RGB triple) at a time
10. If biWidth is 3:
        int padding =  (4 - (bi.biWidth * sizeof(RGBTRIPLE)) % 4) % 4 = 3.
        This step ensures the number of bytes in every row is a multiple of 4.
11. fseek allows us to change the offset of a pointer.
12. SEEK_CUR is the current position indicator in the file.
